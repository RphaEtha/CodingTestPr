개요
Array에 0과 숫자가 섞여있는 상태이다. 이때, 0을 배열의 끝으로 보내고 0이 아닌 숫자의 순서는 변경되지 않도록 하라.

Array의 가장 기본적인 사용방법 Index를 사용하자.
0이 아닌 숫자를 찾아가는 주황색 Index와 0을 가리켜야하는 파란색 Index가 있다고 치자. 주황색 Index는 숫자를 찾게되고 숫자를 찾게되면 swap을 시킬 수 있어.
즉, 주황색 Index가 0 이 아닌 숫자를 찾다가 찾으면 파란색 Index와 각 Index에 해당하는 값을 Swap을 하는거지.  그렇게 swap을 하고 나면, 파란색 Index는 다시 한 칸 올려주는거지.
그렇게 0이 아닌 숫자를 이러한 방식으로 주황색인덱스가 끝날때까지 진행하게되면 가장 끝단까지 옮겨지게 돼.
 
void moveZeroes(int[] nums)
{ 
	int wIdx = 0;
	for (int idx = 0; idx < nums.length; idx++)
	{
		if(nums[idx]) != 0)
		{
			swap(nums[wIdx], nums[idx]);
			wIdx++;
		}
	}
}

생각하기 나름인데, swap이 아닌 copy로 생각할 수도 있다.
주황색 index가 0이 아닌 숫자를 찾게되면, 파란색 index가 가리키는 위치에 값을 붙여넣기하고 파란색 인덱스는 한 칸 이동하고, 이 과정을 반복하다, 주황색 인덱스가 범위를 넘어서면, 이제 파란색 index와 그 이후의 값들에 0으로 덮어 씌우기가 가능하겠지.


void moveZeroes(int[] nums)
{
	int wIdx = 0;
	for (int idx = 0; idx = nums.length; idx++)
	{ 		if(nums[idx] != 0)
		{
			nums[widx] = nums[idx];
			wIdx++;
		}
	}
	//setZeros();
	for ( ;, wIdx < num.length; wIdx++)
	{
		nums[wIdx] = 0;
	}
}
