Shortest Unsorted Continuous Subarray

주어진 Array를 오름차순으로 정렬할거야
그럴때, 해당 Array에서 어떤 subArray를 정렬을 하면, 전체 Array가 오름차순으로 변해.
이 subArray의 length를 리턴해주면 답이 되는거지.

여기서 한 번더 체크해야하는 부분은 subArray의 길이가 최소한이 되어야한다.

예를 들어서
[2, 5, 7, 6, 3, 9, 15] 가 있다고 했을때,

subArray를 2부터 9를 잡고 정렬을 하면 전체 Array는 오름차순이 되지만, 최소길이의 정렬을 해야하는 subArray는 [5, 7, 6, 3]을 정렬하면되기에 4가 되겠지.

이 문제를 어떻게 풀까? 잘 감이 안오잖아.
그림을 그려서 intuition을 얻어보는게 좋은 방법이 된다.

그래프를 그려서 직관을 찾는 방법이 유효하겠지.

그래서 처음에 생각할 수 있는게, 마루(위로 뾰족한 부분)하고 골(아래로 뾰족한 부분)을 찾아서 이 구간(마루와 골 사이)를 정렬하면 될까? 생각해볼 수 있겠지.
그런데 이 방법은 유효하지 못해.

음, 저렇게 문제에서 정의된 그래프로 직관이 안잡히면 여러 그래프를 그려보고 생각해볼수도 있어.

시작점과 끝점을 잡고
시작점에서 이동해보는거지, 한 번 꺾이고 나서 최솟값 부분을 왼쪽으로 보내봐. 그래서 만나는 지점부터 쭉 정렬을 하게되면 어느정도의 오름차순으로 정렬할 수 있다는 걸 알 수 있지.
그런데 이점에서도 전체적인 정렬이되지 않는 것을 볼 수 있어.
정렬을 위한 시작점은 찾았지만, 끝 점을 찾지 못했다는 것이지.
그 끝점을 찾기 위해서는 끝점에서 시작해서 한 번 꺾이고 나서 최대값을 찾아보는거지. 그리고 그 최대값을 오른쪽으로 밀어서 만나는 지점까지를 끝점으로 잡으면 돼.
그래서 최종적으로 시작점과 끝점을 찾았으니 그 기준으로 정렬을 실시하면 된다.
